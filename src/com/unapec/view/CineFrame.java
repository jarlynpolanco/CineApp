/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.unapec.view;

import com.unapec.persistance.Cine;
import com.unapec.persistance.Sala;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.RollbackException;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author JP317548
 */
public class CineFrame extends javax.swing.JFrame {

    private List<Cine> cinesList;
    private List<Sala> _salasList;
    private boolean flagBusqueda = false;
    
    public CineFrame() {
        initComponents();
        loadComboBoxCines();
        loadTableCines();
        loadTableSalas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CinePUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("CinePU").createEntityManager();
        cineQuery = java.beans.Beans.isDesignTime() ? null : CinePUEntityManager.createQuery("SELECT c FROM Cine c");
        cineList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : cineQuery.getResultList();
        cineQuery1 = java.beans.Beans.isDesignTime() ? null : CinePUEntityManager.createQuery("SELECT c FROM Cine c");
        cineList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : cineQuery1.getResultList();
        salaQuery = java.beans.Beans.isDesignTime() ? null : CinePUEntityManager.createQuery("SELECT s FROM Sala s");
        salasList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : salaQuery.getResultList();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreCine = new javax.swing.JTextField();
        btnAgregarCine = new javax.swing.JButton();
        btnBuscarCine = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCines = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextSala = new javax.swing.JTextField();
        btnAgregarSala = new javax.swing.JButton();
        jComboCines = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSalas = new javax.swing.JTable();
        btnBuscarSala = new javax.swing.JButton();
        btnActualizarSala = new javax.swing.JButton();
        btnBorrarSala = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        jLabel1.setText("Mantenimiento de Cines");

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        jLabel2.setText("Nombre cine");

        txtNombreCine.setFont(new java.awt.Font("Segoe Print", 0, 11)); // NOI18N

        btnAgregarCine.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnAgregarCine.setText("Agregar");
        btnAgregarCine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCineActionPerformed(evt);
            }
        });

        btnBuscarCine.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnBuscarCine.setText("Buscar");
        btnBuscarCine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCineActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnBorrar.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jTableCines.setFont(new java.awt.Font("Segoe Print", 0, 11)); // NOI18N
        jTableCines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre Cine"
            }
        ));
        jScrollPane2.setViewportView(jTableCines);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombreCine, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregarCine, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarCine, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreCine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarCine)
                    .addComponent(btnBuscarCine)
                    .addComponent(btnActualizar)
                    .addComponent(btnBorrar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cine", jPanel1);

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        jLabel3.setText("Nombre sala");

        jTextSala.setFont(new java.awt.Font("Segoe Print", 0, 11)); // NOI18N

        btnAgregarSala.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnAgregarSala.setText("Agregar sala");
        btnAgregarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarSalaActionPerformed(evt);
            }
        });

        jComboCines.setFont(new java.awt.Font("Segoe Print", 0, 11)); // NOI18N
        jComboCines.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboCinesMouseClicked(evt);
            }
        });
        jComboCines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCinesActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        jLabel4.setText("Cines");

        jTableSalas.setFont(new java.awt.Font("Segoe Print", 0, 11)); // NOI18N
        jTableSalas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre Sala", "Nombre Cine"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableSalas);
        if (jTableSalas.getColumnModel().getColumnCount() > 0) {
            jTableSalas.getColumnModel().getColumn(0).setResizable(false);
            jTableSalas.getColumnModel().getColumn(1).setResizable(false);
            jTableSalas.getColumnModel().getColumn(2).setResizable(false);
        }

        btnBuscarSala.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnBuscarSala.setText("Buscar Sala");
        btnBuscarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarSalaActionPerformed(evt);
            }
        });

        btnActualizarSala.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnActualizarSala.setText("Actualizar Sala");
        btnActualizarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarSalaActionPerformed(evt);
            }
        });

        btnBorrarSala.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        btnBorrarSala.setText("Borrar Sala");
        btnBorrarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarSalaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        jLabel5.setText("Mantenimiento de Salas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboCines, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextSala, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnAgregarSala)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarSala)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizarSala)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBorrarSala))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboCines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarSala)
                    .addComponent(btnBuscarSala)
                    .addComponent(btnActualizarSala)
                    .addComponent(btnBorrarSala))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sala", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 26, -1, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboCinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCinesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboCinesActionPerformed

    private void jComboCinesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboCinesMouseClicked
        // TODO add your handling code here:
        loadComboBoxCines();
    }//GEN-LAST:event_jComboCinesMouseClicked

    private void btnAgregarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarSalaActionPerformed
        // TODO add your handling code here:
        if(!jTextSala.getText().isEmpty()){
            EntityManager em;
            EntityManagerFactory emf;
            emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Sala sala = new Sala();
            Cine cine = cinesList.get(jComboCines.getSelectedIndex());
            sala.setNombre(jTextSala.getText());
            sala.setIdcine(cine);

            //---------------Create---------------------
            try{
                em.persist(sala);
                em.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "El registro fue agregado correctamente! ", "Atencion", JOptionPane.WARNING_MESSAGE);
                jTextSala.setText("");
                jComboCines.setSelectedItem("");
                flagBusqueda = false;
                loadTableSalas();
            }catch(RollbackException ex){
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error.", "Atencion", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe introducir un código.", "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarSalaActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();

        if(jTableCines.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para borrar el registro", "Atencion", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TableModel tableModel = jTableCines.getModel();
        Cine c = em.find(Cine.class, tableModel.getValueAt(jTableCines.getSelectedRow(), 0));
        if(c!=null){
            if(JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar este registro?", "Atencion",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION ){
            em.remove(c);
            em.getTransaction().commit();
            txtNombreCine.setText("");
            flagBusqueda = false;
            loadTableCines();
        }
        em.close();

        }else{
            JOptionPane.showMessageDialog(null, "No se encontró NADA "+txtNombreCine.getText(), "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        if(!flagBusqueda){
            JOptionPane.showMessageDialog(null, "Debe realizar una busqueda para lograr la actualizacion", "Atencion", JOptionPane.WARNING_MESSAGE);
            return;
        }
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();

        TableModel tableModel = jTableCines.getModel();
        Cine cine = em.find(Cine.class, tableModel.getValueAt(jTableCines.getSelectedRow(), 0));

        if(cine!=null){
            cine.setNombre(txtNombreCine.getText());
            em.merge(cine);
            em.getTransaction().commit();
            txtNombreCine.setText("");
            flagBusqueda = false;
            loadTableCines();
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró el código "+txtNombreCine.getText(), "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBuscarCineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCineActionPerformed
        // TODO add your handling code here:
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();

        if(jTableCines.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para realizar la busqueda", "Atencion", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TableModel tableModel = jTableCines.getModel();
        Cine cine = em.find(Cine.class, tableModel.getValueAt(jTableCines.getSelectedRow(), 0));
        if(cine != null){
            txtNombreCine.setText(cine.getNombre());
            flagBusqueda = true;
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró "+txtNombreCine.getText(), "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarCineActionPerformed

    private void btnAgregarCineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCineActionPerformed
        // TODO add your handling code here:
        if(!txtNombreCine.getText().isEmpty()){
            EntityManager em;
            EntityManagerFactory emf;
            emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
            em = emf.createEntityManager();
            em.getTransaction().begin();
            Cine cine = new Cine();
            cine.setNombre(txtNombreCine.getText());
            //---------------Create---------------------
            try{
                em.persist(cine);
                em.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "El cine fue agregado correctamente! ", "Atencion", JOptionPane.WARNING_MESSAGE);
                txtNombreCine.setText("");
                flagBusqueda = false;
                loadTableCines();

            }catch(RollbackException ex){
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error.", "Atencion", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe introducir un elemento para que sea agregado", "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarCineActionPerformed

    private void btnBuscarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarSalaActionPerformed
        // TODO add your handling code here:
        
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();

        if(jTableSalas.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para realizar la busqueda", "Atencion", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TableModel tableModel = jTableSalas.getModel();
        Sala sala = em.find(Sala.class, tableModel.getValueAt(jTableSalas.getSelectedRow(), 0));
        if(sala != null){
            jTextSala.setText(sala.getNombre());  
            jComboCines.setSelectedItem(cineList.stream().filter((Cine item) -> Objects.equals(item.getIdcine(), 
                        sala.getIdcine().getIdcine())).collect(Collectors.toList()).get(0).getNombre());
            flagBusqueda = true;
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró el "+txtNombreCine.getText(), "Atencion", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnBuscarSalaActionPerformed

    private void btnActualizarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarSalaActionPerformed
        // TODO add your handling code here:
        if(!flagBusqueda){
            JOptionPane.showMessageDialog(null, "Debe realizar una busqueda para lograr la actualizacion", "Atencion", JOptionPane.WARNING_MESSAGE);
            return;
        }
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();

        TableModel tableModel = jTableSalas.getModel();
        Sala sala = em.find(Sala.class, tableModel.getValueAt(jTableSalas.getSelectedRow(), 0));

        if(sala!=null){
            sala.setNombre(jTextSala.getText());
            sala.setIdcine(cineList.stream().filter((Cine item) -> Objects.equals(item.getNombre(), 
                        jComboCines.getSelectedItem())).collect(Collectors.toList()).get(0));
            em.merge(sala);
            em.getTransaction().commit();
            jTextSala.setText("");
            jComboCines.setSelectedItem("");
            flagBusqueda = false;
            loadTableSalas();
        }else{
            JOptionPane.showMessageDialog(null, "No se encontró el "+txtNombreCine.getText(), "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarSalaActionPerformed

    private void btnBorrarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarSalaActionPerformed
        // TODO add your handling code here:
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();

        if(jTableSalas.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila para borrar el registro", "Atencion", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TableModel tableModel = jTableSalas.getModel();
        Sala c = em.find(Sala.class, tableModel.getValueAt(jTableSalas.getSelectedRow(), 0));
        if(c!=null){
            if(JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar este registro?", "Atencion",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION ){
            em.remove(c);
            em.getTransaction().commit();
            jComboCines.setSelectedItem("");
            jTextSala.setText("");
            flagBusqueda = false;
            loadTableSalas();
        }
        em.close();

        }else{
            JOptionPane.showMessageDialog(null, "No se encontró NADA "+txtNombreCine.getText(), "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrarSalaActionPerformed
    
    private void loadTableCines(){
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();
        TypedQuery<Cine> query = em.createNamedQuery("Cine.findAll", Cine.class);
        cinesList = query.getResultList();
        
        DefaultTableModel dm = (DefaultTableModel) jTableCines.getModel();
        for (int i = dm.getRowCount() - 1; i >= 0; i--) {
            dm.removeRow(i);
        }   
        cinesList.forEach((cine) -> {
            dm.addRow( new Object[] { cine.getIdcine(), cine.getNombre()});
        });  
    }
    
    private void loadTableSalas(){
        loadTableCines();
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();
        TypedQuery<Sala> query = em.createNamedQuery("Sala.findAll", Sala.class);
        _salasList = query.getResultList();
        
        DefaultTableModel dm = (DefaultTableModel) jTableSalas.getModel();
        for (int i = dm.getRowCount() - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        _salasList.forEach((sala) -> {
        dm.addRow( new Object[] { sala.getIdsala(), sala.getNombre(),
        cineList.stream().filter((Cine item) -> Objects.equals(item.getIdcine(), 
                    sala.getIdcine().getIdcine())).collect(Collectors.toList()).get(0).getNombre()});
        });  
    }
    
    private void loadComboBoxCines(){       
        jComboCines.removeAllItems();      
        EntityManager em;
        EntityManagerFactory emf;
        emf = javax.persistence.Persistence.createEntityManagerFactory("CinePU");
        em = emf.createEntityManager();
        em.getTransaction().begin();
        TypedQuery<Cine> query = em.createNamedQuery("Cine.findAll", Cine.class);
        cinesList = query.getResultList();
        
        cinesList.forEach((cine) -> {
            jComboCines.addItem(cine.getNombre());
        });
    }
    public boolean isNumeric(String str) { 
    try {  
        Double.parseDouble(str);  
        return true;
    } catch(NumberFormatException e){  
        return false;  
    }  
    }
    
    public boolean isValidDate(String dateStr) {
        DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        sdf.setLenient(false);
        try {
            sdf.parse(dateStr);
        } catch (ParseException e) {
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager CinePUEntityManager;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnActualizarSala;
    private javax.swing.JButton btnAgregarCine;
    private javax.swing.JButton btnAgregarSala;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBorrarSala;
    private javax.swing.JButton btnBuscarCine;
    private javax.swing.JButton btnBuscarSala;
    private java.util.List<com.unapec.persistance.Cine> cineList;
    private java.util.List<com.unapec.persistance.Cine> cineList1;
    private javax.persistence.Query cineQuery;
    private javax.persistence.Query cineQuery1;
    private javax.swing.JComboBox<String> jComboCines;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCines;
    private javax.swing.JTable jTableSalas;
    private javax.swing.JTextField jTextSala;
    private javax.persistence.Query salaQuery;
    private java.util.List<com.unapec.persistance.Sala> salasList;
    private javax.swing.JTextField txtNombreCine;
    // End of variables declaration//GEN-END:variables
}
